@use "sass:math";

$grid-colums: 12;

$start:0px;
$multiplier:2;

$grid-gaps: (
  "0":($start *$multiplier),
  "1":$start + 1px * $multiplier,
  "2":$start + 2px * $multiplier,
  "3":$start + 3px * $multiplier,
  "4":$start + 4px * $multiplier,
  "5":$start + 5px * $multiplier,
  "6":$start + 6px * $multiplier,
  "7":$start + 7px * $multiplier,
  "8":$start + 8px * $multiplier,
  "9":$start + 9px * $multiplier,
  "10":$start + 10px * $multiplier,
);

.row {
  display: flex;
  flex-flow: row wrap;
}

@include sm {
  @for $i from 1 through $grid-colums {
    .col-#{$i}-sm {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-colums);
    }
  }
}
@include md {
  @for $i from 1 through $grid-colums {
    .col-#{$i}-md {
      box-sizing: border-box;

      flex-grow: 0;
      width: math.div($i * 100%, $grid-colums);
    }
  }
}
@include lg {
  @for $i from 1 through $grid-colums {
    .col-#{$i}-lg {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-colums);
    }
  }
}

$justify-values: flex-start, flex-end, center, space-between, space-around;
$align-values: flex-start, flex-end, center, baseline, stretch;


// Grid Gaps
@each $key, $val in $grid-gaps {
  .gap-#{$key} > * {
    gap: $val;
  }
  .gap-#{$key} {
    gap: $val;
  }
}

// Justify Content Classes
@each $value in $justify-values {
  .justify-#{$value} {
    justify-content: $value;
  }
}

@each $value in $align-values {
  .align-#{$value} {
    align-items: $value;
  }
}